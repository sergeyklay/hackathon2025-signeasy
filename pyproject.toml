[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "signeasy"
version = "0.1.0"
description = "A simple AI-powered document processing and e-signature automation POC."
authors = ["Serghei Iakovlev <serghei@airslate.com"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10, <4"
flask = "^3.1.0"
pypdf = "^5.1.0"
python-dotenv = "^1.0.1"
llama-index = "^0.12.8"
SQLAlchemy = "^2.0.37"
Flask-Mail = "^0.10.0"
Flask-Migrate = "^4.0.7"
Flask-SQLAlchemy = "^3.1.1"
Werkzeug = "^3.1.3"
alembic = "^1.14.0"

[tool.poetry.group.dev.dependencies]
debugpy = "^1.8.12"
isort = "^5.13.2"
black = "^24.10.0"
flask-debugtoolbar = "^0.16.0"

[tool.poetry.group.testing.dependencies]
coverage = {version = "^7.6.10", extras = ["toml"]}
pytest = "^8.3.4"
pytest-mock = "^3.14.0"

[tool.pytest.ini_options]
addopts = "--verbose --durations=25"

[tool.coverage.report]
# Set the number of decimal places in coverage percentage
precision = 2

# Show lines that were not executed
show_missing = true

[tool.coverage.html]
# Directory for the HTML format report
directory = "coverage/html"

[tool.coverage.xml]
# Filename for the XML format report
output = "coverage/xml/coverage.xml"

[tool.coverage.run]
# Enable branch coverage (default: False)
branch = true

# Run tests in parallel (useful when using CI/CD)
parallel = true

# Filename for storing coverage data
data_file = "coverage/.coverage"

# Omit specified files or directories from the report
omit = [
    "*/.venv/*",
    "*/__pycache__/*",
    "*/pytest_cache/*",
    "*/downloads/*",
    "*/htmlcov/*",
    "*/node_modules/*",
    "*/storage/*",
    "*/tests/*"
]
